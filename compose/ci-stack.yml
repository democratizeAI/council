version: '3.9'

# Dedicated CI stack - No GPU, minimal resources, CPU-only
services:
  # Main API service - CPU only
  swarm-api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: swarm-api-main
    ports:
      - "8000:8000"
    environment:
      - DEVICE=cpu
      - GPU_DISABLED=true
      - PROMETHEUS_ENABLED=true
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - ENVIRONMENT=ci
    volumes:
      - ../logs:/app/logs
      - ../models:/app/models
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Canary API service - CPU only  
  swarm-api-canary:
    build:
      context: ../api_canary
      dockerfile: Dockerfile
    container_name: swarm-api-canary
    ports:
      - "8001:8000"
    environment:
      - DEVICE=cpu
      - GPU_DISABLED=true
      - PROMETHEUS_ENABLED=true
      - REDIS_URL=redis://redis:6379
      - CANARY_MODE=true
      - TRAFFIC_PERCENT=5
      - LOG_LEVEL=INFO
      - ENVIRONMENT=ci-canary
    volumes:
      - ../logs:/app/logs
      - ../models:/app/models
    depends_on:
      - redis
      - swarm-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Supporting infrastructure
  redis:
    image: redis:7-alpine
    container_name: swarm-redis
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: swarm-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../monitoring:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: swarm-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-storage:/var/lib/grafana
      - ../monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped

volumes:
  grafana-storage:

networks:
  default:
    name: swarm-ci-network
