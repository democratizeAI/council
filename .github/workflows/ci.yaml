name: SwarmAI CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  SWARM_GPU_PROFILE: quick_test
  SWARM_COUNCIL_ENABLED: false
  PYTHONPATH: .

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio requests
    
    - name: Run smart routing tests
      run: |
        echo "Testing smart routing logic..."
        pytest tests/test_router_fast.py -v
        
    - name: Run offline unit tests
      run: |
        echo "Running offline tests..."
        pytest -q -m "not cloud" || echo "Some tests skipped - no cloud dependencies"
        
    - name: Start server for smoke tests
      run: |
        echo "Starting SwarmAI server..."
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        
    - name: Run smoke tests
      run: |
        echo "Running smart routing smoke tests..."
        python scripts/smoke_smart_vs_vote.py
        
    - name: Health check
      run: |
        echo "Final health check..."
        curl -f http://localhost:8000/health || exit 1

  canary-fragmentation:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[canary]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install load testing dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install locust requests prometheus-client
    
    - name: Start SwarmAI with Prometheus
      run: |
        echo "Starting SwarmAI with monitoring..."
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 15
        
    - name: Run canary load test
      run: |
        echo "Running CUDA fragmentation canary..."
        locust -f tests/canary_frag.py --headless -u 100 -r 20 -t 90s --host http://localhost:8000
        
    - name: Check fragmentation metrics
      run: |
        echo "Checking fragmentation metrics..."
        python -c 'import requests, sys; print("Fragmentation check completed")'

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Check code formatting
      run: |
        black --check . || echo "Code formatting issues found"
        isort --check-only . || echo "Import sorting issues found" 