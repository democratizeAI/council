# Swarm v2.6.0 Infrastructure Management
# Usage: make <target>

.PHONY: help up down restart status logs clean test smoke canary-up canary-down evolution-up evolution-down push-metrics

# Default target
help:
	@echo "🚀 Swarm v2.6.0 Infrastructure Commands"
	@echo ""
	@echo "Stack Management:"
	@echo "  up              Deploy full stack (core + canary + evolution)"
	@echo "  down            Stop all services"
	@echo "  restart         Restart all services"
	@echo "  status          Show service status"
	@echo "  logs            Show all service logs"
	@echo ""
	@echo "Individual Stacks:"
	@echo "  core-up         Deploy core services only"
	@echo "  canary-up       Deploy canary services"
	@echo "  evolution-up    Deploy LoRA training pipeline"
	@echo "  canary-down     Stop canary services"
	@echo "  evolution-down  Stop evolution services"
	@echo ""
	@echo "Testing & Operations:"
	@echo "  smoke           Run smoke test for LoRA training"
	@echo "  test            Run all health checks"
	@echo "  push-metrics    Push test metrics to Pushgateway"
	@echo "  clean           Clean up stopped containers and images"
	@echo ""
	@echo "Environment: T:\LAB\infra"

# Full stack deployment
up: core-up canary-up evolution-up
	@echo "✅ Full v2.6.0 stack deployed!"
	@echo "🌐 Access points:"
	@echo "  - API: http://localhost:9000"
	@echo "  - Grafana: http://localhost:3000 (admin/admin)"
	@echo "  - Prometheus: http://localhost:9090"
	@echo "  - Alertmanager: http://localhost:9093"

down:
	@echo "🛑 Stopping all services..."
	docker compose -f docker-compose.yml down
	docker compose -f docker-compose.canary.yml down
	docker compose -f docker-compose.evolution.yml down
	docker compose -f docker-compose.pushgw.yml down

# Core services (monitoring + API)
core-up:
	@echo "🚀 Deploying core services..."
	docker compose -f docker-compose.yml --env-file env/prod.env up -d

# Canary deployment
canary-up:
	@echo "🐤 Deploying canary services..."
	docker compose -f docker-compose.canary.yml --env-file env/canary.env up -d

canary-down:
	@echo "🛑 Stopping canary services..."
	docker compose -f docker-compose.canary.yml down

# LoRA training pipeline
evolution-up:
	@echo "🧠 Deploying LoRA training pipeline..."
	docker compose -f docker-compose.evolution.yml --env-file env/evolution.env up -d

evolution-down:
	@echo "🛑 Stopping evolution services..."
	docker compose -f docker-compose.evolution.yml down

# Restart services
restart:
	@echo "🔄 Restarting all services..."
	$(MAKE) down
	sleep 5
	$(MAKE) up

# Status and monitoring
status:
	@echo "📊 Service Status:"
	@docker compose ps 2>/dev/null || true
	@echo ""
	@echo "🧠 Evolution Services:"
	@docker compose -f docker-compose.evolution.yml ps 2>/dev/null || true

logs:
	@echo "📝 Recent logs from all services:"
	docker compose logs --tail=10
	docker compose -f docker-compose.evolution.yml logs --tail=10

# Testing
smoke:
	@echo "🧪 Running LoRA training smoke test..."
	@echo '[{"name":"smoke_test_$(shell date +%s)","dataset":["2+2=?","What is ML?","Explain AI"]}]' > tasks/lora_queue.json
	@echo "✅ Smoke test job queued. Check trainer logs with: make logs"

test:
	@echo "🔍 Running health checks..."
	@curl -f http://localhost:9000/health || echo "❌ Main API unhealthy"
	@curl -f http://localhost:9090/-/healthy || echo "❌ Prometheus unhealthy"
	@curl -f http://localhost:3000/api/health || echo "❌ Grafana unhealthy"
	@curl -f http://localhost:9091/-/healthy || echo "❌ Pushgateway unhealthy"
	@echo "✅ Health checks completed"

push-metrics:
	@echo "📊 Pushing test metrics..."
	@echo 'swarm_test_metric 1' | curl -X POST --data-binary @- http://localhost:9091/metrics/job/test

# Cleanup
clean:
	@echo "🧹 Cleaning up..."
	docker container prune -f
	docker image prune -f
	docker volume prune -f
	@echo "✅ Cleanup completed"

# Build real images
build-images:
	@echo "🔨 Building trainer and scheduler images..."
	docker build -t swarm/trainer:v2.6.0 -f trainer/Dockerfile trainer/
	docker build -t swarm/cron:v2.6.0 -f scheduler/Dockerfile scheduler/
	@echo "✅ Images built successfully"

# Environment info
env:
	@echo "🌍 Environment Information:"
	@echo "Workspace: $(shell pwd)"
	@echo "Docker version: $(shell docker --version)"
	@echo "Docker Compose version: $(shell docker compose version)"
	@echo ""
	@echo "📦 Available images:"
	@docker images | grep -E "(swarm|prom|grafana|redis)" || true
