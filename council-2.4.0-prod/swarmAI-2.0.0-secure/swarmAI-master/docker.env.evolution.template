# üê≥üé≠ü™¥ Evolution-Main Environment Configuration
# Copy this file to .env and fill in your values

# ===== GRAFANA CONFIGURATION =====
GRAFANA_ADMIN_PASSWORD=evolution-admin-change-me

# ===== TELEGRAM NOTIFICATIONS =====
# Get bot token from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here
# Get chat ID by messaging your bot and checking https://api.telegram.org/bot<token>/getUpdates
TELEGRAM_CHAT_ID=your-telegram-chat-id-here

# ===== EVOLUTION CONFIGURATION =====
# Branch for evolution tracking
EVOLUTION_BRANCH=evolution-main
# Interval for nightly evolution cycles (hours)
SCHEDULE_INTERVAL_HOURS=24
# Emotional consensus timeout (milliseconds)
EMOTIONAL_CONSENSUS_TIMEOUT=10000

# ===== CRAWLER CONFIGURATION =====
# Enable/disable crawler system
CRAWLER_ENABLED=true
# How often to run crawler (hours)
CRAWLER_INTERVAL_HOURS=6
# Challenge domains to discover
CRAWLER_DOMAINS=code,logic,math,creative,science
# Difficulty range (1-10 scale)
CRAWLER_DIFFICULTY_RANGE=3-8
# Challenges to discover per crawl session
CRAWLER_BATCH_SIZE=5
# Minimum quality score for challenges (0.0-1.0)
CRAWLER_QUALITY_THRESHOLD=0.7
# Number of parallel crawler workers
CRAWLER_PARALLEL_WORKERS=2
# Cache size for successful discoveries
CRAWLER_CACHE_SIZE=1000
# Enable batch processing
CRAWLER_BATCH_PROCESSING=true

# ===== AUTO-FEEDER CONFIGURATION =====
# Enable/disable auto-feeder
FEEDER_ENABLED=true
# Feed interval in minutes (360 = 6 hours)
FEEDER_INTERVAL_MINUTES=360
# Minimum challenges to keep in queue
FEEDER_MIN_QUEUE_SIZE=5
# Maximum queue size
FEEDER_MAX_QUEUE_SIZE=50
# High-priority domains
FEEDER_PRIORITY_DOMAINS=logic,math
# Adjust difficulty based on performance
FEEDER_ADAPTIVE_DIFFICULTY=true
# Enable asynchronous processing
FEEDER_ASYNC_PROCESSING=true
# Processing batch size
FEEDER_BATCH_SIZE=10

# ===== CHALLENGE SOURCES =====
# GitHub repositories to crawl
CRAWLER_GITHUB_REPOS=TheAlgorithms/Python,keon/algorithms,donnemartin/interactive-coding-challenges
# Kaggle competition categories
CRAWLER_KAGGLE_CATEGORIES=competitive-programming,data-science
# LeetCode difficulty levels
CRAWLER_LEETCODE_DIFFICULTY=medium,hard
# ArXiv categories for research problems
CRAWLER_ARXIV_CATEGORIES=cs.AI,cs.LG,cs.DS

# ===== CHALLENGE FILTERING =====
# Topics to exclude
CRAWLER_EXCLUDE_TOPICS=deprecated,legacy,outdated
# Required keywords
CRAWLER_REQUIRE_KEYWORDS=algorithm,optimization,neural,ml,ai
# Minimum complexity score (0.0-1.0)
CRAWLER_MIN_COMPLEXITY=0.6
# Maximum solution length (characters)
CRAWLER_MAX_SOLUTION_LENGTH=1000
# Minimum problem description length
CRAWLER_MIN_DESCRIPTION_LENGTH=100

# ===== GPU CONFIGURATION =====
# Which GPU to use (0 for first GPU, 1 for second, etc.)
CUDA_VISIBLE_DEVICES=0

# ===== LOGGING CONFIGURATION =====
LOG_LEVEL=INFO
# Crawler-specific logging
CRAWLER_LOG_LEVEL=INFO
FEEDER_LOG_LEVEL=INFO

# ===== PROMETHEUS CONFIGURATION =====
# Retention settings for metrics
PROMETHEUS_RETENTION_TIME=30d
PROMETHEUS_RETENTION_SIZE=10GB

# ===== SECURITY CONFIGURATION =====
# Set to 'true' in production to enable additional security measures
PRODUCTION_MODE=true
# Set to 'false' to disable user registration in Grafana
GRAFANA_ALLOW_SIGN_UP=false

# ===== NETWORK CONFIGURATION =====
# Docker network subnet (change if conflicts with existing networks)
DOCKER_SUBNET=172.20.0.0/16

# ===== VOLUME CONFIGURATION =====
# Host paths for persistent data (change if needed)
PROMETHEUS_DATA_PATH=/var/lib/tamagotchi/prometheus
GRAFANA_DATA_PATH=/var/lib/tamagotchi/grafana

# ===== PERFORMANCE TUNING =====
# Training worker configuration
TRAINER_WORKERS=2
TRAINER_BATCH_SIZE=8
TRAINER_MEMORY_LIMIT=8GB
# API configuration
API_WORKERS=4
API_TIMEOUT=30
# Queue processing
QUEUE_WORKER_THREADS=4
QUEUE_RETRY_ATTEMPTS=3

# ===== DEVELOPMENT OVERRIDES =====
# Uncomment for development mode
# LOG_LEVEL=DEBUG
# PRODUCTION_MODE=false
# EMOTIONAL_CONSENSUS_TIMEOUT=5000
# CRAWLER_INTERVAL_HOURS=1
# FEEDER_INTERVAL_MINUTES=60
# CRAWLER_BATCH_SIZE=2
# FEEDER_MIN_QUEUE_SIZE=2 